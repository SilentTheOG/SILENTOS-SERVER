ver=6.2
CF="CONFIG/CRASH-DATA"
cmd0m=0
nb=0
printf '\e[8;60;245t'
devm=0
exec 2>/dev/null
NF="\033[0m"
CW="\033[38;5;15m"
CR="\033[48;5;88m"
CGRY58="\033[48;5;237m"



crashBOOT() {
  printf "${CR}"
clear
printf "${CGRY58}                                                                                                                                                                                                                                                     
                                                                                                                 LUMINOUS BOOT ERROR                                                                                                                 
                                                                                                                                                                                                                                                     
${CR}
ERROR CODE: $code (BOOT)

LUMINOUS OS has encountered a boot error, typically due to a tampered native boot function. Please retry, or reinstall LUMINOUS OS. 
WARNING: Hard retrying will only work on the parent operating system Windows. Using it's shell LUMINOUS OS will re-launch.

(1) - HARD RETRY
(2) - SOFT RETRY
(3) - REINSTALL




========================================================================================================================INFOS========================================================================================================================

If you have made any changes or edits to the system, please either revert them or reinstall LUMINOUS OS.
If this is happening after an update, or system change, plase ask why_do_yall_hate_this_user on Discord for support.




========================================================================================================================EXTRA========================================================================================================================

This error has happened ON BOOT, and may not be an error from booting, it may have happened during the loading of the native bootloader.
If you continue having problems, please recover via the backup bootloader OR a custom one.































${NF}"
CB=0
read -n1 CB
    if [ "$CB" != "1" ] && [ "$CB" != "2" ] && [ "$CB" != "3" ]; then
    crashBOOT
    elif [ "$CB" == "1" ]; then 
sc="$(basename "${BASH_SOURCE[0]}")"
  sd="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd)"
  sp="$sd/$sc"
echo "3MB FILLER TEXT" > $CF
powershell -command "$sp"
exit 0
elif [ "$CB" == "2" ]; then
CRASHEDRESTARTABLE=1
RESTARTONCRASH
CRASHEDRESTARTABLE=1
  RESTARTONCRASH
  Power=1
  EFUNC
  Power=2
  ONFUNC
clear
e
    elif [ "$CB" == "3" ]; then
curl -O https://raw.githubusercontent.com/SilentTheOG/SILENTOS-SERVER/main/SERVER.TMP
touch FAILSAFE.SH
cat SERVER.TMP > e.sh | rm SERVER.TMP
echo "touch tmp.sh
echo "./e.sh" >> tmp.sh
./tmp.sh
rm tmp.sh
if [ -e "e.sh" ] && [ ! "$(wc -c < "e.sh")" -gt 3 ]; then
./RECOVERY_SCRIPT.SH
else
./e.sh
fi" > FAILSAFE.SH
./FAILSAFE.SH
  fi
}




if [ -e $CF ]; then
read -p "Luminous OS has crashed last time you have used it, if this is the first time, don't worry. If this keeps happening it's recommended to reinstall!
Press Enter to continue..." 2>/dev/tty
fi

    if declare -f ON > /dev/null; then
        SYS="YES"
    else
        SYS="NO"
    fi

echo "                                                                                                       LUMINOUS OS is updating command files...









"
echo "          [                                                                                                                                                                                                                            ]
          [                                                                                                                                                                                                                            ]
          [                                                                                                                                                                                                                            ]
          [                                                                                                                                                                                                                            ]"
if [ ! -d "COMMANDS" ]; then
echo "Making commands folder..."
    mkdir "COMMANDS"
fi

cat << 'EOF' > COMMANDS/repair.sh
cmdf() {
    if declare -f e > /dev/null; then
        BTL="YES"
    else
        BTL="NO"
    fi

    echo "NATIVE BOOTLOADER WORKING: $BTL"
    echo "SYSTEM CRITICAL FUNCTION: $SYS"

    read -p "Press Enter to continue..." 2>/dev/tty

    if [ "$SYS" = "NO" ] || [ "$BTL" = "NO" ]; then
        echo "Repair needed, working on it..."
        curl -O https://raw.githubusercontent.com/SilentTheOG/SILENTOS-SERVER/main/SERVER.TMP

        cat SERVER.TMP > e.sh
        rm SERVER.TMP

        echo "touch tmp.sh"
        echo "./e.sh" > tmp.sh
        chmod +x e.sh tmp.sh
        ./tmp.sh
        rm tmp.sh
    else
        echo "Everything looks good, no repair needed!"
    fi
}

EOF
clear
echo "                                                                                                       LUMINOUS OS is updating command files...









"
echo "          [====================                                                                                                                                                                                                        ]
          [====================                                                                                                                                                                                                        ]
          [====================                                                                                                                                                                                                        ]
          [====================                                                                                                                                                                                                        ]"

cat << 'EOF' > COMMANDS/shutdown.sh
cmdf(){
if [ $arg == "/e" ]; then
exit 0
elif [ $arg == "/m" ]; then
cmd0m=1
cmd0=M
e
elif [ $arg == "/r" ]; then
e
ON
elif [ $arg == "/s" ]; then
setup=1
echo "0" > CONFIG/CONFIG.CFG
e
ON
elif [ $arg == "/DEVMODE" ]; then
exec 2>/dev/tty
devm=1
e
ON
elif [ $arg == "/?" ]; then
echo "Shutdown command arguments:
/e - Exits the window
/r - Restarts the system
/m - Restarts and boots into boot menu
/s - Restarts into setup"
else
echo "Invalid or empty argument, use 'shutdown /?' for a list of arguments."
fi
}
EOF

clear
echo "                                                                                                       LUMINOUS OS is updating command files...









"
echo "          [==============================                                                                                                                                                                                    ]
          [==============================                                                                                                                                                                                    ]
          [==============================                                                                                                                                                                                    ]
          [==============================                                                                                                                                                                                    ]"

echo 'echo "Command list:
    shutdown (NEW!)
    clear
    echo
    update
    Beta command list:
    None yet!"' > COMMANDS/listMCMDB.sh
    echo 'echo "Command list:
    shutdown (NEW!)
    clear
    restart
    echo
    update"' > COMMANDS/list.sh

clear
echo "                                                                                                       LUMINOUS OS is updating command files...









"
echo "          [==================================================                                                                                                                                                                ]
          [==================================================                                                                                                                                                                ]
          [==================================================                                                                                                                                                                ]
          [==================================================                                                                                                                                                                ]"

clear
echo "                                                                                                       LUMINOUS OS is updating command files...









"
echo "          [======================================================================================================================================================                                                  ]
          [======================================================================================================================================================                                                  ]
          [======================================================================================================================================================                                                  ]
          [======================================================================================================================================================                                                  ]
          [======================================================================================================================================================                                                  ]"
echo 'echo "OMG LIGHTNING MCQUEEN SLAYYYY GIRLIE OMGGGGGGGGGGGG
                                                              ............--                         
                                                     .....-++###++++++++##-..             ------     
                                              ...---++#++-------..   ..----+-......--------------    
                                           .--++++----------              .++.......--------------   
                                          -+----++-.                        +-.......+-------------  
                                         ---+-                    .-.       .+.. .........-..... .-  
                                        +++.        .+###-      +####-       +-...........-..... ... 
                                       +-..         -####.      --++.        -+..........-...... ... 
                                      +-..           .-. ....................  .--. ....        ..#+ 
                                    .++.....-..............----.....-------....---.  ...       ..-## 
                     . ............... ....--.------------....----------------+###-.... - .   .+.-## 
                  ...-.........--..-------------------------------. .--------+#####. .-  ..  ....+## 
                ...--..-----------------------------------------. ..---------++####-. -   .......+#+ 
               ----------------------------------------.-. -+--...---------.-.-.-+++.-.   -+--+-.#+- 
              +--.--..-------------------------..---------------------------+++--..++-.-- .---.--##- 
             #+-----+. -----------------------------+++++++--------------+++######+-.+++- .-+-+--### 
            ##+-------++++++++------------------+++++++++###++---+++---+++++##########++.+----++###+ 
           ###++++++++++####+++++++++++++++###+++------+##+-++++++++++++++++###########++++#.-++#+++ 
           ###+++++++++++###-----------------....--+####-----++++++++++++++########+####+++-+++#+++- 
          +###+++++++++++#####+++++++++++############+-------++++++++++++++#+###########++++++##+++- 
           ####++++++++++++####################++++++-------+++++++++++++++#+++#####+###++######+-#+ 
           ####+++++++---+++-+--.......--..----+++++--+++++++++++++++++++++#++##++++############-+#+ 
           #####+++++++++++++++++-------++++++++++++++++++++++++++++++++++----##++++#+.+#########-+- 
            #####+++++++++++++++++++++++++++++++++++++++++++++++++++++++++-##+-++++##-+###########+  
             #####+++++++++++++++++++++++++++++++++++++++++++++++######+++----++-+#+..############   
               #########+++++++++++++++++++++++++++####################+ .+#+++#++- +##              
       ##################################################################+. -.- -.-##                
    #########################################################################++#####                 
     #############################################################################                   
                     ###############################################"' > COMMANDS/IAMSPEED.sh
clear
echo "                                                                                                       LUMINOUS OS is updating command files...









"
echo "          [==========================================================================================================================================================================                              ]
          [==========================================================================================================================================================================                              ]
          [==========================================================================================================================================================================                              ]
          [==========================================================================================================================================================================                              ]"

echo 'echo "NOTE: This only works on a Windows system!"
psc=0
read -p "Powershell command:" psc 2>/dev/tty
powershell -command "$psc"' > COMMANDS/powershell.sh
clear
echo "                                                                                                       LUMINOUS OS is updating command files...









"
echo "          [==================================================================================================================================================================================================================          ]
          [==================================================================================================================================================================================================================          ]
          [==================================================================================================================================================================================================================          ]
          [==================================================================================================================================================================================================================          ]"

echo 'read -p "What file would you like to see the contents of? " sedfile 2>/dev/tty
sed '' "$sedfile"
echo ""' > COMMANDS/sed.sh


clear
echo "                                                                                                       LUMINOUS OS is updating command files...









"
echo "          [============================================================================================================================================================================================================================]
          [============================================================================================================================================================================================================================]
          [============================================================================================================================================================================================================================]
          [============================================================================================================================================================================================================================]"
read -p "




                                                                                                              Command update finished!
                                                                                                       Press Enter to continue to LUMINOUS OS" 2>/dev/tty




NF="\033[0m"
FB="\033[1m"
CW="\033[38;5;15m"
CB3="\033[48;5;20m"
crsprv2() {
  printf "${FB}${CW}${CB3}crash"
  clear
  RDCODE="0"
if [ $code == "1" ]; then
RDCODE="GENERIC BUILT IN SCRIPT FALIURE
"
elif [ $code == "2" ]; then
RDCODE="MISUSED BUILT IN
"
elif [ $code == "130" ]; then
RDCODE="CTRL C PRESSED
"
else
RDCODE="UNSPECIFIED ERROR ($code)"
fi
  echo "Second (Simple) crash screen
  
  
  "
 printf "${FB}${CW}${CB3}Your system has crashed, it is recommended that you reinstall LUMINOUS OS or if you are using a custom bootloader to use the default!
We'll restart for you                                                                               
STOP CODE: $RDCODE
LAST COMMAND USED: $cmd $arg
"
 printf "Press Enter to continue to setup...${NF}"
 read
 clear
 CRINF
}
crsprv1() {
    line=$(sed -n '1p' "$file")
      line2=$(sed -n '2p' "$file")
        line3=$(sed -n '3p' "$file")
          line4=$(sed -n '4p' "$file")
            line5=$(sed -n '5p' "$file")
              line6=$(sed -n '6p' "$file")
                line7=$(sed -n '7p' "$file")
  PK="\033[38;5;199m"
  BL="\033[38;5;20m"
  BOL="\033[1m"
  GR="\033[38;5;2m"
  GL="\033[38;5;220m"
  RD="\033[38;5;160m"
  clear
  echo "First crash screen
  
  
  "
  printf "${BOL}${RD}CRITICAL ERROR
${GR}The shell has encountered an error that could not be properly resolved.${NOCOLOR}
${BL}CRASH INFO:${NOCOLOR}

${RD}CONFIG FILE FLAGS:${NOCOLOR}
${GL}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${NOCOLOR}
" 
if [ $line == "1" ]; then
line="NO"
elif [ $line == "0" ]; then
line="YES"
else
line="INVALID OR MISSING"
fi
printf "${BOL}${PK}NEW: $line
"
if [ $line3 == "1" ]; then
line3="YES"
elif [ $line3 == "0" ]; then
line3="NO"
else
line3="INVALID OR MISSING"
fi
printf "${BOL}${PK}MCMDB: $line3
"
if [ $line4 == "1" ]; then
line4="YES"
elif [ $line4 == "0" ]; then
line4="NO"
else
line4="INVALID OR MISSING"
fi
printf "${BOL}${PK}MULTIUSER: $line4
"
if [ -z "$line2" ]; then
line2="INVALID OR MISSING"
fi
printf "${BOL}${PK}USER 1: $line2
"
if [ -z "$line5" ]; then
line5="INVALID OR MISSING"
elif [ $line5 == "0" ]; then
line5="USER NOT IN USE"
fi
printf "${BOL}${PK}USER 2: $line5
"
if [ -z "$line6" ]; then
line6="INVALID OR MISSING"
elif [ $line6 == "0" ]; then
line6="USER NOT IN USE"
fi
printf "${BOL}${PK}USER 3: $line6
"
if [ $line7 == "1" ]; then
line7="YES"
ln7=1
elif [ $line7 == "0" ]; then
line7="NO"
ln7=0
else
line7="INVALID OR MISSING (WILL BE TREATED AS YES.)"
fi
printf "${BOL}${PK}EXTRA CRASH CONTENT: $line7
"
RDCODE="0"
if [ $code == "1" ]; then
RDCODE="GENERIC BUILT IN SCRIPT FALIURE
"
elif [ $code == "2" ]; then
RDCODE="MISUSED BUILT IN
"
elif [ $code == "130" ]; then
RDCODE="CTRL C PRESSED
"
else
RDCODE="UNSPECIFIED ERROR ($code)
"
fi
printf "${GL}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${NOCOLOR}
"
printf "${RD}SYSTEM INFORMATION:${NOCOLOR}
"
printf "${GL}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${NOCOLOR}
"
if [ $valf == "0" ]; then
valf="YES"
else
valf="NO"
fi
BTL=0
if declare -f e > /dev/null; then
BTL="YES"
else
BTL="NO"
fi
SYS=0
if declare -f ON > /dev/null; then
SYS="YES"
else
SYS="NO"
fi
if [ $val_opt == "2" ]; then
val_opt="YES"
else
val_opt="NO"
fi
printf "${BOL}${PK}VERSION: $ver
PASSED VALIDATION: $valf
IGNORED VALIDATION: $val_opt
NATIVE BOOTLOADER INTACT: $BTL
CRITICAL FUNCTION: $SYS${NOCOLOR}
${GL}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${NOCOLOR}
" 
if [ "$ln7" = "0" ]; then
  printf "${RD}ERROR CODE:${NOCOLOR} ${BL}$RDCODE${NOCOLOR}${GR}Upon restarting, the system may be unstable, and the window may close.${NOCOLOR}
"
  read -p "Press Enter to continue to next crash screen..." 2>/dev/tty
crsprv2
else
  printf "${RD}EXTRA INFORMATION:${NOCOLOR}
${GL}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${NOCOLOR}
"
if [ $nb == 1 ]; then
nb="YES"
else
nb="NO"
fi
  sc="$(basename "${BASH_SOURCE[0]}")"
  sd="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd)"
  sp="$sd/$sc"

  printf "${BOL}${PK}OS FILE NAME (IF NOT e.sh MAY CAUSE PROBLEMS.): $sc
${BOL}${PK}OS DIRECTORY: $sd
${BOL}${PK}OS FULL PATH: $sp${NOCOLOR}
${BOL}${PK}LAST COMMAND USED: $cmd $arg
${BOL}${PK}NATIVE BOOTLOADER USED: $nb
${GL}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${NOCOLOR}
"
  if [ "$ln7" = "0" ]; then
    printf "${RD}ERROR CODE:${NOCOLOR} ${BL}$RDCODE${NOCOLOR}${GR}Upon restarting, the system may be unstable, and the window may close.${NOCOLOR}
"
  else
    printf "${RD}ERROR CODE:${NOCOLOR} ${BL}$RDCODE ($code) 
${NOCOLOR}${GR}Upon restarting, the system may be unstable, and the window may close.${NOCOLOR}
"
  fi
fi

read -p "Press Enter to continue to next crash screen..." 2>/dev/tty
crsprv2
}





mkdir BOOTLOADERS
touch BOOTLOADERS/BACKUP.SH
cat << 'EOF' > BOOTLOADERS/BACKUP.SH
function e() {
  trap 'code=$?; if [ $code -ne 0 ]; then crashBOOT; fi' EXIT
  if declare -f ON > /dev/null; then
      echo "Continue"
      else
        echo "The function that keeps the OS on was not found. 
Your OS is corrupted, please re-install it."
        read -p "Press Enter to continue..." 2>/dev/tty
        exit 0
      fi
clear
MCMDB=0
if [ -e "$file" ]; then
code="SYSTEM COMMANDED, MISSING CONFIG"
crashBOOT
fi
  echo "                                                                                                    
                                                                                                    
                                                                                                    
                                              @@@@@                                                 
                                           @@@@@@@@@@@                                              
                                          @@@@@@@@@@@@@                                             
                                   @@@@@@@@@@@@@@@@@@@@@                                            
              @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                            
             @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                          
               @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                      
                 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                    
                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@                                   
                     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@@@@@@@                                   
                     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@@@@@@@@                                 
                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@  @@@                                
                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@          @@@  @@@                               
                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@           @@@  @@@                              
                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@            @@@  @@@                             
                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@             @@@  @@@                            
                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              @@@@  @@@                          
                     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@               @@@  @@@                         
                      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@                 @@@  @@@                        
                        @@@@@@@@@@@@@@@@@@@@@@@@@@@@                 @@@  @@@                       
                          @@@@@@@@@@@@@    @@@@@@@@@                  @@@  @@@@                     
                                             @@@@@@@                   @@@@  @@@                    
                                                @@@@                     @@@  @@@                   
                                                 @@@                      @@@  @@@                  
                                                                           @@@ @@@@@@               
      LUMINOUS IS BOOTING                                                   @@@@@@@@@@@             
          PLEASE WAIT.                                                       @@@@@@@@@@             
                                                                             @@@@@@@@@@             
                                                                             @@@@@@@@@@             
                                                                            @@@ @@@@                
                                                                          @@@   @@@                 
                                                                          @@@  @@@                  
                                                                         @@@  @@@                   
                                                                        @@   @@@                    
                                                                      @@@   @@@                     
                                                                     @@@   @@@                      
                                                                    @@@   @@@                       
                                                                   @@@   @@@                        
                                                                  @@@   @@@                         
                                                                 @@@  @@@                           
                                                                @@@  @@@                            
                                                               @@@  @@@                             
                                                              @@@  @@@                              
                                                             @@@  @@@                               
                                                            @@@  @@@                                
                                            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              
                                          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              
                                          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              
                                            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              
                                                                                                    
                                                                                                    
                                                                                                    "
                                                                                                    if [ $cmd0m == "0" ]; then
                                                                                                    read -n1 -t 1 cmd0 2>/dev/tty
                                                                                                    fi

  clear
  cmd0m=0
if [ "$cmd0" == "M" ]; then
    clear
    echo "<INFO> Boot menu launched. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
    echo "<INFO> Boot menu launched. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
    echo "                                                                                                                                                                                                
                                                                                                    
                                                                                                    
                                              @@@@@                                                 
                                           @@@@@@@@@@@                                              
                                          @@@@@@@@@@@@@                                             
                                   @@@@@@@@@@@@@@@@@@@@@                                            
              @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                            
             @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                          
               @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                      
                 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                    
                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@                                   
                     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@@@@@@@                                   
                     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@@@@@@@@                                 
                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@  @@@                                
                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@          @@@  @@@                               
                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@           @@@  @@@                              
                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@            @@@  @@@                             
                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@             @@@  @@@                            
                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              @@@@  @@@                          
                     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@               @@@  @@@                         
                      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@                 @@@  @@@                        
                        @@@@@@@@@@@@@@@@@@@@@@@@@@@@                 @@@  @@@                       
                          @@@@@@@@@@@@@    @@@@@@@@@                  @@@  @@@@                     
                                             @@@@@@@                   @@@@  @@@                    
                                                @@@@                     @@@  @@@                   
                                                 @@@                      @@@  @@@                  
  ┏━  ┓ ┳┳┳┳┓┳┳┓┏┓┳┳┏┓  ━┓                                                 @@@ @@@@@@               
  ┃   ┃ ┃┃┃┃┃┃┃┃┃┃┃┃┗┓   ┃                                                  @@@@@@@@@@             
  ┗━  ┗┛┗┛┛ ┗┻┛┗┗┛┗┛┗┛  ━┛                                                   @@@@@@@@@@           
    ┳┓┏┓┏┓┏┳┓  ┳┳┓┏┓┳┓┳┳                                                      @@@@@@@@@@           
    ┣┫┃┃┃┃ ┃   ┃┃┃┣ ┃┃┃┃                                                       @@@@@@@@@@           
    ┻┛┗┛┗┛ ┻   ┛ ┗┗┛┛┗┗┛                                                        @@@@@@@@@           
                                                                                @@@@@@@@     
                                                                                @@@@@@@@   
                                                                               @@@@@@@@ 
     1-Bypass bootloader (Not recommended$exc)                                   @@@@@@@@@
     2-Re-install LUMINOUS OS                                                @@@@@@@@@
     3-Boot with custom loader (buggy)                                      @@@@@@@@@
     4-Continue booting                                                     @@@@@@@@@             
                                                                            @@@ @@@@                
                                                                           @@@  @@@                 
                                                                          @@@  @@@                  
                                                                         @@@  @@@                   
                                                                        @@   @@@                    
                                                                      @@@   @@@                     
                                                                     @@@   @@@                      
                                                                    @@@   @@@                       
                                                                   @@@   @@@                        
                                                                  @@@   @@@                         
                                                                 @@@   @@@                          
                                                                @@@   @@@                           
                                                               @@@   @@@                            
                                                              @@@   @@@                             
                                                             @@@   @@@                              
                                                            @@@   @@@                               
                                            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              
                                          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              
                                          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              
                                            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
read -n1 BOOTMENU
    if [ "$BOOTMENU" == "1" ]; then
        clear
        Power=2
        ON
        trap 'code=$?; if [ $code -ne 0 ]; then crashSYS; fi' EXIT
    elif [ "$BOOTMENU" == "2" ]; then
        curl -O https://raw.githubusercontent.com/SilentTheOG/SILENTOS-SERVER/main/SERVER.TMP
        touch FAILSAFE.SH
        cat SERVER.TMP > e.sh | rm SERVER.TMP
        echo "touch tmp.sh
echo \"./e.sh\" >> tmp.sh
./tmp.sh
rm tmp.sh
if [ -e \"e.sh\" ] && [ ! \"\$(wc -c < \"e.sh\")\" -gt 3 ]; then
./RECOVERY_SCRIPT.SH
else
./e.sh
fi" > FAILSAFE.SH
        ./FAILSAFE.SH
        elif [ "$BOOTMENU" == "3" ]; then
        cbl
    elif [ "$BOOTMENU" == "4" ]; then
        clear

elif [ "$BOOTMENU" == "d" ]; then
exec 2>/dev/tty
devm=1
echo "[SECRET] Developer mode enabled."
read

    else
        clear
        echo "Not an option!"
        sleep 1
        clear
    fi
fi

  if [ $setup == 1 ]; then
  clear
  check
  else
  echo ""
  fi
  line=$(sed -n '3p' "$file")
  if [ $line == 0 ]; then
  MCMDB=0
  else
  MCMDB=1
  fi
SIGNIN () {
  ALLOW=0
  line=$(sed -n '4p' "$file")
  if [ "$line" == "1" ]; then
  clear
    echo "Select profile:"
    line=$(sed -n '2p' "$file")
    echo "User 1 - $line"
    ALLOW=1

    line=$(sed -n '5p' "$file")
    if [ "$line" != "0" ]; then
      echo "User 2 - $line"
      ALLOW1=1
    else
      echo "User 2 not found."
      ALLOW1=0
    fi

    line=$(sed -n '6p' "$file")
    if [ "$line" != "0" ]; then
      echo "User 3 - $line"
      ALLOW2=1
    else
      echo "User 3 not found."
      ALLOW2=0
    fi

    MUL=0
    trap 'code=$?; if [ $code -ne 0 ]; then crashSYS; fi' EXIT
    read -n1 MUL 2>/dev/tty
    clear

    if [ "$MUL" != "1" ] && [ "$MUL" != "2" ] && [ "$MUL" != "3" ]; then
      echo "
      Invalid input, try again."
      SIGNIN
    elif [ "$MUL" == "1" ]; then 
      MUL=1
    elif [ "$MUL" == "2" ]; then
      if [ "$ALLOW1" == "1" ]; then
        MUL=2
      else
        SIGNIN
      fi
    elif [ "$MUL" == "3" ]; then
      if [ "$ALLOW2" == "1" ]; then
        MUL=3
      else
        SIGNIN
      fi
    else
      MUL=1
    fi
  fi
}
line=$(sed -n '7p' "$file")
  if [ -z "$line" ] || [ $line == "" ]; then
  echo "0" >> CONFIG/CONFIG.CFG
  LO=1
  read -p "Press Enter to continue..." 2>/dev/tty
  fi
if [ $LO == 0 ]; then
SIGNIN
else
MUL=1
fi

  code=0
  trap 'code=$?; if [ $code -ne 0 ]; then crashSYS; fi' EXIT


if [ ! -e "$file" ]; then
echo "<ERROR> One or more config file(s) was not found. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<ERROR> One or more config file(s) was not found. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Error-Log.log
    printf "${RED}                                ......
                               :      :
                               :      :
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                                ......

                                ......
                               :      :
                               :      :
                                ......
MISSING OS CONFIGURATION INFO!
CREATING CONFIG INFO.

"
printf "${BLUE}-Note: If you have MCMDB Mode on this will turn it off and you will need to turn it back on.${RED}"
echo "" > CONFIG/CONFIG.CFG
if [ -e "$file" ]; then
echo "
Sucess!"
./e.sh
else
echo "There has been an error creating the configuration file, you may still boot, however you will lose access to a number of features.
It is recommended to reinstall LUMINOUS OS."
read -p "Press Enter to continue..." 2>/dev/tty
printf "${NOCOLOR}"
clear
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
clear
   echo "    @@@@@         @@@@@    @@@@@      @@@@@@      @@@@@@      @@@@@@      @@@@@     @@@@        @@@@@@@@@       @@@@@@    @@@@@      @@@@@@@@@  
    @@@@          @@@@      @@@        @@@@@     @@@@@@        @@@@       @@@@@      @        @@@@     @@@@      @@@       @@      @@@@     @@  
    @@@@          @@@@     @@@        @@ @@@    @@ @@@        @@@@        @@ @@@    @@      @@@@       @@@@     @@@@      @@@      @@@@         
   @@@@          @@@@      @@@       @@  @@@   @@ @@@@        @@@@       @@  @@@@   @@      @@@@       @@@@     @@@      @@@        @@@@@       
   @@@@          @@@      @@@        @@  @@@ @@   @@@        @@@@        @@   @@@@ @@      @@@@       @@@@     @@@@      @@@          @@@@@@    
  @@@@          @@@@      @@@       @@@  @@@@@   @@@@        @@@        @@     @@@ @@      @@@@      @@@@@     @@@@     @@@             @@@@    
  @@@     @@@   @@@@     @@@        @@    @@@    @@@        @@@@        @@      @@@@       @@@@     @@@@       @@@      @@@      @@     @@@@    
@@@@@@@@@@@@      @@@@@@@@         @@@@        @@@@@@      @@@@@@     @@@@      @@@@         @@@@@@@@@          @@@@@@@@@       @@@@@@@@@@      
BACKUP LOADER."
    if [ $devm == "1" ]; then
echo "DEVELOPER MODE."
fi
if [ $MUL == 1 ]; then
line=$(sed -n '2p' "$file")
elif [ $MUL == 2 ]; then 
line=$(sed -n '5p' "$file")
elif [ $MUL == 3 ]; then
line=$(sed -n '6p' "$file")
else
line="UNKNOWN USER"
fi
rand=$((RANDOM % 3))
if [ "$rand" -eq 0 ]; then
  res="We hope you brought pizza$exc"
elif [ "$rand" -eq 1 ]; then
  res="How's your day going?"
else
  res="Hope you're doing well$exc"
fi
echo "Welcome, $line$exc $res"
if [ $MCMDB == 1 ]; then 
echo "Version $ver (BETA), contact why_do_yall_hate_this_user on Discord for more details."
                       echo "Use command $quote2 for a list of commands
"
else
echo "Version $ver, contact why_do_yall_hate_this_user on Discord for more details."
                       echo "Use command $quote2 for a list of commands
"
fi
ON
clear
fi




fi

echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
./RECOVERY_SCRIPT.SH &
clear
echo "    @@@@@         @@@@@    @@@@@      @@@@@@      @@@@@@      @@@@@@      @@@@@     @@@@        @@@@@@@@@       @@@@@@    @@@@@      @@@@@@@@@  
    @@@@          @@@@      @@@        @@@@@     @@@@@@        @@@@       @@@@@      @        @@@@     @@@@      @@@       @@      @@@@     @@  
    @@@@          @@@@     @@@        @@ @@@    @@ @@@        @@@@        @@ @@@    @@      @@@@       @@@@     @@@@      @@@      @@@@         
   @@@@          @@@@      @@@       @@  @@@   @@ @@@@        @@@@       @@  @@@@   @@      @@@@       @@@@     @@@      @@@        @@@@@       
   @@@@          @@@      @@@        @@  @@@ @@   @@@        @@@@        @@   @@@@ @@      @@@@       @@@@     @@@@      @@@          @@@@@@    
  @@@@          @@@@      @@@       @@@  @@@@@   @@@@        @@@        @@     @@@ @@      @@@@      @@@@@     @@@@     @@@             @@@@    
  @@@     @@@   @@@@     @@@        @@    @@@    @@@        @@@@        @@      @@@@       @@@@     @@@@       @@@      @@@      @@     @@@@    
@@@@@@@@@@@@      @@@@@@@@         @@@@        @@@@@@      @@@@@@     @@@@      @@@@         @@@@@@@@@          @@@@@@@@@       @@@@@@@@@@      
BACKUP LOADER."
    if [ $devm == "1" ]; then
echo "DEVELOPER MODE."
fi
if [ $MUL == 1 ]; then
line=$(sed -n '2p' "$file")
elif [ $MUL == 2 ]; then 
line=$(sed -n '5p' "$file")
elif [ $MUL == 3 ]; then
line=$(sed -n '6p' "$file")
else
line="UNKNOWN USER"
fi
rand=$((RANDOM % 3))
if [ "$rand" -eq 0 ]; then
  res="We hope you brought pizza$exc"
elif [ "$rand" -eq 1 ]; then
  res="How's your day going?"
else
  res="Hope you're doing well$exc"
fi
echo "Welcome, $line$exc $res"
if [ $MCMDB == 1 ]; then 
echo "Version $ver (BETA), contact why_do_yall_hate_this_user on Discord for more details."
                       echo "Use command $quote2 for a list of commands
"
else
echo "Version $ver, contact why_do_yall_hate_this_user on Discord for more details."
                       echo "Use command $quote2 for a list of commands
"
fi
    Power=2
}
EOF
cbl() {
  clear
  cbly() {
    clear
  shopt -s nullglob
  files=()
  for f in BOOTLOADERS/*; do
    [[ "$(basename "$f")" != "BACKUP.SH" ]] && files+=("$f")
  done
  
  if [ ${#files[@]} -eq 0 ]; then
    echo "No bootloader files available."
    return
  fi
  for i in "${!files[@]}"; do
    echo "$((i+1))) $(basename "${files[i]}")"
  done
  read -p "Choose a bootloader to load: " choice 2>/dev/tty
  
  if [[ "$choice" =~ ^[0-9]+$ ]] && (( choice >= 1 && choice <= ${#files[@]} )); then
    fts="${files[$((choice-1))]}"
    echo "Loading $fts..."
    if grep -q -E '^\s*(function\s+)?e\s*\(\)' "$fts"; then
    echo "Load successful on file $fts. Finishing up..."
    unset -f e
    source "$fts"
else
    echo "$fts does not seem to be a bootloader file, falling back to default loader."
    read -p "Press Enter to continue..." 2>/dev/tty
fi

  else
    echo "Invalid choice. Defaulting to built in."
  fi
  }
  CBLC=0
  echo "Do you want to check for other bootloaders?
1) Yes
2) No"
read -n1 CBLC 2>/dev/tty

    if [ "$CBLC" != "1" ] && [ "$CBLC" != "2" ]; then
      echo "
      Invalid input, try again."
      cbl
      elif [ "$CBLC" == "1" ]; then
      cbly
      elif [ "$CBLC" == "2" ]; then
      clear
      fi
}

EFUNC()  {
while [ $Power -eq 1 ]; do
    if declare -f e > /dev/null; then
    cbl

      e
      break
    else
      echo "BOOT FAILED!"
    fi

  echo "The default bootloader cannot load. Falling back to backup bootloader..."
  if [ ! -z "BOOTLOADERS/BACKUP.SH" ]; then 
  clear
  echo " LUMINOUS OS is loading files and testing functions.
  "
  echo "
                                                              
                                                              
                                                              "
  if declare -f ON > /dev/null; then
on="IN USE"
else
on="NOT FOUND"
  fi
  clear
    echo " LUMINOUS OS is loading files and testing functions.
  "
  echo "
 ████████████████████                                         
 ████████████████████                                         
 ████████████████████                                         "
  if declare -f crashSYS > /dev/null; then
crs="IN USE"
else
crs="NOT FOUND"
  fi
  clear
    echo " LUMINOUS OS is loading files and testing functions.
  "
  echo "
 ████████████████████████████████████████                     
 ████████████████████████████████████████                     
 ████████████████████████████████████████                     "
    if declare -f crashBOOT > /dev/null; then
crsb="IN USE"
else
crsb="NOT FOUND"
  fi
  clear
    echo " LUMINOUS OS is loading files and testing functions.
  "
  echo "
 ████████████████████████████████████████                     
 ████████████████████████████████████████                     
 ████████████████████████████████████████                     "
  if ! [ -e "$file" ]; then
cfg="NOT FOUND"
else
cfg="IN USE"
  fi
  clear
  echo " LUMINOUS OS is loading files and testing functions.
  "
  echo "
 ████████████████████████████████████████████████████████████ 
 ████████████████████████████████████████████████████████████ 
 ████████████████████████████████████████████████████████████ 
                              DONE
                              
                              
                              "                           

echo "CRITICAL SYSTEM FUNCTION: $on
CRASH HANDLER STATUS: $crs
BOOT CRASH HANDLER STATUS: $crsb
CONFIGURATION REGISTRY FILE FOUND: $cfg

If the critical system function is working, you may continue and re-install via the command.
If you have made any system changes, revert them, and see if that fixes this problem.
Press Enter to continue."
read
echo "

"
ON
  else
  . BOOTLOADERS/BACKUP.SH
  e
  fi

  if declare -f ON > /dev/null; then
    Power=2
    ON
    break
  else
    echo "The function that keeps the OS on was not found. 
Your OS is corrupted, please re-install it."
    read -p "Press Enter to continue..." 2>/dev/tty
    exit 0
  fi
done
}
ONFUNC() {
  while [ $Power == 2 ]; do
  ON
done
}

chmod -R 777 .
LO=0
NOCOLOR='\033[0m'
exc='!'
printf '\e[8;60;245t'
file=CONFIG/CONFIG.CFG

function e() {
  line9=$(sed -n '9p' "$file")
  if [ $line9 == "1" ]; then
  echo "passed"
else
echo "There is a new 'AUTORUN' file that you can add, it will run when the bootloader runs, before anything. This only works on the native bootloader, or custom ones may support it.
The 'RF' function in it is what will run.
Press Enter to continue..."
read
echo "1" >> $file
  fi
  if [ -e "CONFIG/AUTORUN.SH" ]; then
        . "CONFIG/AUTORUN.SH"
        RF
fi
  nb=1
  trap 'code=$?; if [ $code -ne 0 ]; then crashBOOT; fi' EXIT
  if declare -f ON > /dev/null; then
      echo "Continue"
      else
        echo "The function that keeps the OS on was not found. 
Your OS is corrupted, please re-install it."
        read -p "Press Enter to continue..." 2>/dev/tty
        exit 0
      fi
clear
MCMDB=0
if ! [ -e "$file" ]; then
code="SYSTEM COMMANDED, MISSING CONFIG"
crashBOOT
fi
  echo "                                                                                                    
                                                                                                    
                                                                                                    
                                              @@@@@                                                 
                                           @@@@@@@@@@@                                              
                                          @@@@@@@@@@@@@                                             
                                   @@@@@@@@@@@@@@@@@@@@@                                            
              @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                            
             @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                          
               @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                      
                 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                    
                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@                                   
                     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@@@@@@@                                   
                     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@@@@@@@@                                 
                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@  @@@                                
                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@          @@@  @@@                               
                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@           @@@  @@@                              
                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@            @@@  @@@                             
                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@             @@@  @@@                            
                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              @@@@  @@@                          
                     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@               @@@  @@@                         
                      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@                 @@@  @@@                        
                        @@@@@@@@@@@@@@@@@@@@@@@@@@@@                 @@@  @@@                       
                          @@@@@@@@@@@@@    @@@@@@@@@                  @@@  @@@@                     
                                             @@@@@@@                   @@@@  @@@                    
                                                @@@@                     @@@  @@@                   
                                                 @@@                      @@@  @@@                  
                                                                           @@@ @@@@@@               
      LUMINOUS IS BOOTING                                                   @@@@@@@@@@@             
          PLEASE WAIT.                                                       @@@@@@@@@@             
                                                                             @@@@@@@@@@             
                                                                             @@@@@@@@@@             
                                                                            @@@ @@@@                
                                                                          @@@   @@@                 
                                                                          @@@  @@@                  
                                                                         @@@  @@@                   
                                                                        @@   @@@                    
                                                                      @@@   @@@                     
                                                                     @@@   @@@                      
                                                                    @@@   @@@                       
                                                                   @@@   @@@                        
                                                                  @@@   @@@                         
                                                                 @@@  @@@                           
                                                                @@@  @@@                            
                                                               @@@  @@@                             
                                                              @@@  @@@                              
                                                             @@@  @@@                               
                                                            @@@  @@@                                
                                            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              
                                          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              
                                          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              
                                            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              
                                                                                                    
                                                                                                    
                                                                                                    "
                                                                                                    
                                                                                                    if [ $cmd0m == "0" ]; then
                                                                                                    read -n1 -t 1 cmd0 2>/dev/tty
                                                                                                    fi
  clear
  cmd0m=0
if [ "$cmd0" == "M" ]; then
    clear
    echo "<INFO> Boot menu launched. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
    echo "<INFO> Boot menu launched. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
    echo "                                                                                                                                                                                                
                                                                                                    
                                                                                                    
                                              @@@@@                                                 
                                           @@@@@@@@@@@                                              
                                          @@@@@@@@@@@@@                                             
                                   @@@@@@@@@@@@@@@@@@@@@                                            
              @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                            
             @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                          
               @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                      
                 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                    
                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@                                   
                     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@@@@@@@                                   
                     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@@@@@@@@                                 
                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@  @@@                                
                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@          @@@  @@@                               
                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@           @@@  @@@                              
                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@            @@@  @@@                             
                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@             @@@  @@@                            
                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              @@@@  @@@                          
                     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@               @@@  @@@                         
                      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@                 @@@  @@@                        
                        @@@@@@@@@@@@@@@@@@@@@@@@@@@@                 @@@  @@@                       
                          @@@@@@@@@@@@@    @@@@@@@@@                  @@@  @@@@                     
                                             @@@@@@@                   @@@@  @@@                    
                                                @@@@                     @@@  @@@                   
                                                 @@@                      @@@  @@@                  
  ┏━  ┓ ┳┳┳┳┓┳┳┓┏┓┳┳┏┓  ━┓                                                 @@@ @@@@@@               
  ┃   ┃ ┃┃┃┃┃┃┃┃┃┃┃┃┗┓   ┃                                                  @@@@@@@@@@             
  ┗━  ┗┛┗┛┛ ┗┻┛┗┗┛┗┛┗┛  ━┛                                                   @@@@@@@@@@           
    ┳┓┏┓┏┓┏┳┓  ┳┳┓┏┓┳┓┳┳                                                      @@@@@@@@@@           
    ┣┫┃┃┃┃ ┃   ┃┃┃┣ ┃┃┃┃                                                       @@@@@@@@@@           
    ┻┛┗┛┗┛ ┻   ┛ ┗┗┛┛┗┗┛                                                        @@@@@@@@@           
                                                                                @@@@@@@@     
                                                                                @@@@@@@@   
                                                                               @@@@@@@@ 
     1-Bypass bootloader (Not recommended$exc)                                   @@@@@@@@@
     2-Re-install LUMINOUS OS                                                @@@@@@@@@
     3-Boot with custom loader (buggy)                                      @@@@@@@@@
     4-Continue booting                                                     @@@@@@@@@             
                                                                            @@@ @@@@                
                                                                           @@@  @@@                 
                                                                          @@@  @@@                  
                                                                         @@@  @@@                   
                                                                        @@   @@@                    
                                                                      @@@   @@@                     
                                                                     @@@   @@@                      
                                                                    @@@   @@@                       
                                                                   @@@   @@@                        
                                                                  @@@   @@@                         
                                                                 @@@   @@@                          
                                                                @@@   @@@                           
                                                               @@@   @@@                            
                                                              @@@   @@@                             
                                                             @@@   @@@                              
                                                            @@@   @@@                               
                                            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              
                                          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              
                                          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              
                                            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
read -n1 BOOTMENU
    if [ "$BOOTMENU" == "1" ]; then
        clear
        Power=2
        ON
        trap 'code=$?; if [ $code -ne 0 ]; then crashSYS; fi' EXIT
    elif [ "$BOOTMENU" == "2" ]; then
        curl -O https://raw.githubusercontent.com/SilentTheOG/SILENTOS-SERVER/main/SERVER.TMP
        touch FAILSAFE.SH
        cat SERVER.TMP > e.sh | rm SERVER.TMP
        echo "touch tmp.sh
echo \"./e.sh\" >> tmp.sh
./tmp.sh
rm tmp.sh
if [ -e \"e.sh\" ] && [ ! \"\$(wc -c < \"e.sh\")\" -gt 3 ]; then
./RECOVERY_SCRIPT.SH
else
./e.sh
fi" > FAILSAFE.SH
        ./FAILSAFE.SH
        elif [ "$BOOTMENU" == "3" ]; then
        cbl
    elif [ "$BOOTMENU" == "4" ]; then
        clear

elif [ "$BOOTMENU" == "d" ]; then
exec 2>/dev/tty
devm=1
echo "[SECRET] Developer mode enabled."
read

    else
        clear
        echo "Not an option!"
        sleep 1
        clear
    fi
fi
  if [ $setup == 1 ]; then
  clear
  check
  else
  echo ""
  fi
  line=$(sed -n '3p' "$file")
  if [ $line == 0 ]; then
  MCMDB=0
  else
  MCMDB=1
  fi
SIGNIN () {
  ALLOW=0
  line=$(sed -n '4p' "$file")
  if [ "$line" == "1" ]; then
  clear
    echo "Select profile:"
    line=$(sed -n '2p' "$file")
    echo "User 1 - $line"
    ALLOW=1

    line=$(sed -n '5p' "$file")
    if [ "$line" != "0" ]; then
      echo "User 2 - $line"
      ALLOW1=1
    else
      echo "User 2 not found."
      ALLOW1=0
    fi

    line=$(sed -n '6p' "$file")
    if [ "$line" != "0" ]; then
      echo "User 3 - $line"
      ALLOW2=1
    else
      echo "User 3 not found."
      ALLOW2=0
    fi

    MUL=0
    trap 'code=$?; if [ $code -ne 0 ]; then crashSYS; fi' EXIT
    read -n1 MUL 2>/dev/tty
    clear

    if [ "$MUL" != "1" ] && [ "$MUL" != "2" ] && [ "$MUL" != "3" ]; then
      echo "
      Invalid input, try again."
      SIGNIN
    elif [ "$MUL" == "1" ]; then 
      MUL=1
    elif [ "$MUL" == "2" ]; then
      if [ "$ALLOW1" == "1" ]; then
        MUL=2
      else
        SIGNIN
      fi
    elif [ "$MUL" == "3" ]; then
      if [ "$ALLOW2" == "1" ]; then
        MUL=3
      else
        SIGNIN
      fi
    else
      MUL=1
    fi
  fi
}
line=$(sed -n '7p' "$file")
  if [ -z "$line" ] || [ $line == "" ]; then
  echo "0" >> CONFIG/CONFIG.CFG
  LO=1
  read -p "Press Enter to continue..." 2>/dev/tty
  fi
if [ $LO == 0 ]; then
SIGNIN
else
MUL=1
fi

  code=0
  trap 'code=$?; if [ $code -ne 0 ]; then crashSYS; fi' EXIT


if [ ! -e "$file" ]; then
echo "<ERROR> One or more config file(s) was not found. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<ERROR> One or more config file(s) was not found. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Error-Log.log
    printf "${RED}                                ......
                               :      :
                               :      :
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                                ......

                                ......
                               :      :
                               :      :
                                ......
MISSING OS CONFIGURATION INFO!
CREATING CONFIG INFO.

"
printf "${BLUE}-Note: If you have MCMDB Mode on this will turn it off and you will need to turn it back on.${RED}"
echo "" > CONFIG/CONFIG.CFG
if [ -e "$file" ]; then
echo "
Sucess!"
./e.sh
else
echo "There has been an error creating the configuration file, you may still boot, however you will lose access to a number of features.
It is recommended to reinstall LUMINOUS OS."
read -p "Press Enter to continue..." 2>/dev/tty
printf "${NOCOLOR}"
clear
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
clear
   echo "    @@@@@         @@@@@    @@@@@      @@@@@@      @@@@@@      @@@@@@      @@@@@     @@@@        @@@@@@@@@       @@@@@@    @@@@@      @@@@@@@@@  
    @@@@          @@@@      @@@        @@@@@     @@@@@@        @@@@       @@@@@      @        @@@@     @@@@      @@@       @@      @@@@     @@  
    @@@@          @@@@     @@@        @@ @@@    @@ @@@        @@@@        @@ @@@    @@      @@@@       @@@@     @@@@      @@@      @@@@         
   @@@@          @@@@      @@@       @@  @@@   @@ @@@@        @@@@       @@  @@@@   @@      @@@@       @@@@     @@@      @@@        @@@@@       
   @@@@          @@@      @@@        @@  @@@ @@   @@@        @@@@        @@   @@@@ @@      @@@@       @@@@     @@@@      @@@          @@@@@@    
  @@@@          @@@@      @@@       @@@  @@@@@   @@@@        @@@        @@     @@@ @@      @@@@      @@@@@     @@@@     @@@             @@@@    
  @@@     @@@   @@@@     @@@        @@    @@@    @@@        @@@@        @@      @@@@       @@@@     @@@@       @@@      @@@      @@     @@@@    
@@@@@@@@@@@@      @@@@@@@@         @@@@        @@@@@@      @@@@@@     @@@@      @@@@         @@@@@@@@@          @@@@@@@@@       @@@@@@@@@@      "
    if [ $devm == "1" ]; then
echo "DEVELOPER MODE."
fi
if [ $MUL == 1 ]; then
line=$(sed -n '2p' "$file")
elif [ $MUL == 2 ]; then 
line=$(sed -n '5p' "$file")
elif [ $MUL == 3 ]; then
line=$(sed -n '6p' "$file")
else
line="UNKNOWN USER"
fi
rand=$((RANDOM % 3))
if [ "$rand" -eq 0 ]; then
  res="We hope you brought pizza$exc"
elif [ "$rand" -eq 1 ]; then
  res="How's your day going?"
else
  res="Hope you're doing well$exc"
fi
echo "Welcome, $line$exc $res"
if [ $MCMDB == 1 ]; then 
echo "Version $ver (BETA), contact why_do_yall_hate_this_user on Discord for more details."
                       echo "Use command $quote2 for a list of commands
"
else
echo "Version $ver, contact why_do_yall_hate_this_user on Discord for more details."
                       echo "Use command $quote2 for a list of commands
"
fi
ON
clear
fi




fi

echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
./RECOVERY_SCRIPT.SH &
clear
echo "    @@@@@         @@@@@    @@@@@      @@@@@@      @@@@@@      @@@@@@      @@@@@     @@@@        @@@@@@@@@       @@@@@@    @@@@@      @@@@@@@@@  
    @@@@          @@@@      @@@        @@@@@     @@@@@@        @@@@       @@@@@      @        @@@@     @@@@      @@@       @@      @@@@     @@  
    @@@@          @@@@     @@@        @@ @@@    @@ @@@        @@@@        @@ @@@    @@      @@@@       @@@@     @@@@      @@@      @@@@         
   @@@@          @@@@      @@@       @@  @@@   @@ @@@@        @@@@       @@  @@@@   @@      @@@@       @@@@     @@@      @@@        @@@@@       
   @@@@          @@@      @@@        @@  @@@ @@   @@@        @@@@        @@   @@@@ @@      @@@@       @@@@     @@@@      @@@          @@@@@@    
  @@@@          @@@@      @@@       @@@  @@@@@   @@@@        @@@        @@     @@@ @@      @@@@      @@@@@     @@@@     @@@             @@@@    
  @@@     @@@   @@@@     @@@        @@    @@@    @@@        @@@@        @@      @@@@       @@@@     @@@@       @@@      @@@      @@     @@@@    
@@@@@@@@@@@@      @@@@@@@@         @@@@        @@@@@@      @@@@@@     @@@@      @@@@         @@@@@@@@@          @@@@@@@@@       @@@@@@@@@@      "
  if [ $devm == "1" ]; then
echo "DEVELOPER MODE."
fi
if [ $MUL == 1 ]; then
line=$(sed -n '2p' "$file")
elif [ $MUL == 2 ]; then 
line=$(sed -n '5p' "$file")
elif [ $MUL == 3 ]; then
line=$(sed -n '6p' "$file")
else
line="UNKNOWN USER"
fi
rand=$((RANDOM % 3))
if [ "$rand" -eq 0 ]; then
  res="We hope you brought pizza$exc"
elif [ "$rand" -eq 1 ]; then
  res="How's your day going?"
else
  res="Hope you're doing well$exc"
fi
echo "Welcome, $line$exc $res"
if [ $MCMDB == 1 ]; then 
echo "Version $ver (BETA), contact why_do_yall_hate_this_user on Discord for more details."
                       echo "Use command $quote2 for a list of commands
"
else
echo "Version $ver, contact why_do_yall_hate_this_user on Discord for more details."
                       echo "Use command $quote2 for a list of commands
"
fi
    Power=2
}

# ON FUNCTION IS HERE SILLY

function ON () {
Power=2
sedfile=0
filewrite=0
writefile=0
einfo=0
signin=pass.txt

local code=$?

  if [[ $code == 1 || $code == 2 || $code == 130 ]]; then
    crashSYS
  fi
arg=""
read -p "Command: " cmd arg 2>/dev/tty
  if [ $cmd == "list" ]; then
  if [ $MCMDB == 1 ]; then
  ./COMMANDS/listMCMDB.sh
else
./COMMANDS/list.sh
fi
elif [ $cmd == "log" ]; then
./COMMANDS/log.sh

elif [ $cmd == "errorlog" ]; then
./COMMANDS/errorlog.sh

elif [ $cmd == "infolog" ]; then
./COMMANDS/infolog.sh

elif [ $cmd == "warninglog" ]; then
./COMMANDS/warninglog.sh

elif [ $cmd == "clearlog" ]; then
./COMMANDS/clearlog.sh


elif [ $cmd == "update" ]; then
curl -O https://raw.githubusercontent.com/SilentTheOG/SILENTOS-SERVER/main/SERVER.TMP
touch FAILSAFE.SH
cat SERVER.TMP > e.sh | rm SERVER.TMP
echo "touch tmp.sh
echo "./e.sh" >> tmp.sh
./tmp.sh
rm tmp.sh
if [ -e "e.sh" ] && [ ! "$(wc -c < "e.sh")" -gt 3 ]; then
./RECOVERY_SCRIPT.SH
else
./e.sh
fi" > FAILSAFE.SH
./FAILSAFE.SH

elif [ $cmd == "testcrashfunc" ]; then
clear
crash



    if [ $? -ne 0 ]; then
        crash
        sleep 1
    fi
    
elif [[ $cmd == "KERNEL CRASH TEST 1" ]]; then
exit 1
elif [[ $cmd == "KERNEL CRASH TEST 2" ]]; then
exit 2
elif [[ $cmd == "KERNEL CRASH TEST CUSTOM" ]]; then
  KERNELCRASH=0
  read -p "What code? (NUMBER REQUIRED. DEFAULT IS 2.) " KERNELCRASH 2>/dev/tty
  if [[ $KERNELCRASH != 0 && ! -z $KERNELCRASH ]]; then
    exit $KERNELCRASH
  else
    exit 2
  fi
elif [ $cmd == "changelog" ]; then
./COMMANDS/changelog.sh

elif [ $cmd == "mcmdb" ]; then
line1=$(sed -n '4p' "$file")
line2=$(sed -n '5p' "$file")
line3=$(sed -n '6p' "$file")
line4=$(sed -n '7p' "$file")
line5=$(sed -n '8p' "$file")
line=$(sed -n '2p' "$file")
name="$line"
echo "1
$name
1
$line1
$line2
$line3
$line4
$line5" > $file
MCMDB=1

elif [[ $cmd == *":"* ]]; then
    printf ""


elif [ $cmd == "app" ]; then
./COMMANDS/app.sh


elif [[ $cmd == "IAMSPEED" ]]; then
./"COMMANDS/IAMSPEED.sh"


elif [ $cmd == "powershell" ]; then
./COMMANDS/powershell.sh
elif [ $cmd == "clear" ]; then
    clear


    elif [ $cmd == "sed" ]; then
./COMMANDS/sed.sh

  elif [ $cmd == "echo" ]; then
 echo "$arg"
    Power=2
  


elif [ -z "$cmd" ]; then
printf ""

else
fn="${cmd}.sh"

if [ -e "COMMANDS/$fn" ]; then
    if grep -q -E '^\s*(function\s+)?cmdf\s*\(\)' "COMMANDS/$fn"; then
        . "COMMANDS/$fn"
        cmdf
    else
        printf "%s exists as a custom command, but has no command function.\n" "$cmd"
    fi
else
    printf "%s is not a valid command.\n" "$cmd"
fi

  fi
  }
























CRINF() {
  echo "
Would you like to use a simpler crash screen, rather than extra info?
  -1 Yes
  -2 No
  -3 Preview screens"
  CRINF=0
  read -n1 CRINF
if [ "$CRINF" != "1" ] && [ "$CRINF" != "2" ] && [ "$CRINF" != "3" ]; then
    echo "
    Invalid input, try again."
    CRINF
    elif [ $CRINF == "1" ]; then
    echo "1" >> $file
    elif [ $CRINF == "2" ]; then
    echo "0" >> $file
    elif [ $CRINF == "3" ]; then
    crsprv1
    fi
}

CRDEV() {
echo "Do you want to enable extra information in the case of a crash?
-1 Yes
-2 No"
CRDEV=0
read -n1 CRDEV
if [ "$CRDEV" != "1" ] && [ "$CRDEV" != "2" ]; then
    echo "
    Invalid input, try again."
    CRDEV 
    elif [ $CRDEV == "1" ]; then
    echo "1" >> $file
    CRINF
    elif [ $CRDEV == "2" ]; then
    echo "0" >> $file
    CRINF
    fi
}

MUF() {
  echo "
  Alright! Would you like to have up to three total users?
-1 Yes
-2 No"
    FLAG=0
  read -n1 FLAG 2>/dev/tty
  if [ "$FLAG" != "1" ] && [ "$FLAG" != "2" ]; then
    echo "
    Invalid input, try again."
    MUF
  elif [ "$FLAG" = "1" ]; then
  echo "1" >> CONFIG/CONFIG.CFG
  echo "
  What will be the users' name(s)? (Name a user '0' to not create that user.)"
  USR2=0
read -p "User 2 Name: " USR2 2>/dev/tty
echo "$USR2" >> CONFIG/CONFIG.CFG
  USR3=0
read -p "User 3 Name: " USR3 2>/dev/tty
echo "$USR3" >> CONFIG/CONFIG.CFG
  else
  echo "0" >> CONFIG.CFG
  echo "0" >> CONFIG.CFG  
  echo "0" >> CONFIG.CFG
  fi
  CRDEV
}

beta() {
  echo "Awesome! Would you like to enable beta features? These may be buggy, but are not required.
-1 Yeah!
-2 Nope."
  BETA=0
  read -n1 BETA
  if [ "$BETA" != "1" ] && [ "$BETA" != "2" ]; then
    echo "Invalid input, try again."
    beta
  elif [ "$BETA" = "1" ]; then
    echo "1" >> "$file"
  else
    echo "0" >> "$file"
  fi
  MUF
}
check() {
  if [ -e "$file" ]; then
    line=$(sed -n '1p' "$file")
    if [ "$line" = "0" ]; then
    echo "1" > $file
      echo "Welcome to LUMINOUS OS Setup...
First off, what is your name?"
      read -p "Name: " name 2>/dev/tty
      echo "$name" >> "$file"
      beta
      echo "LUMINOUS OS setup is complete!"
      read -p "Press Enter to continue..." 2>/dev/tty
    fi
  elif [ ! -e "$file" ] || [ -z "$(sed -n '1p' "$file")" ]; then
    touch CONFIG/CONFIG.CFG
    echo "1" > "$file"
    echo "Welcome to LUMINOUS OS Setup...
First off, what is your name?"
    read -p "Name: " name 2>/dev/tty
    echo "$name" >> "$file"
    beta
    echo "LUMINOUS OS setup is complete!"
    read -p "Press Enter to continue..." 2>/dev/tty
  fi
}

check
trap 'code=$?; if [ $code -ne 0 ]; then crashSYS; fi' EXIT


rm "save.sh"
crashed=0
rec=0
touch RECOVERY_SCRIPT.SH
curl -s -H "Cache-Control: no-cache" https://raw.githubusercontent.com/SilentTheOG/SILENTOS-SERVER/main/RECOVERY_SCRIPT.SH > RECOVERY_SCRIPT.SH
./RECOVERY_SCRIPT.SH &

crashSYS() {
    line=$(sed -n '1p' "$file")
      line2=$(sed -n '2p' "$file")
        line3=$(sed -n '3p' "$file")
          line4=$(sed -n '4p' "$file")
            line5=$(sed -n '5p' "$file")
              line6=$(sed -n '6p' "$file")
                line7=$(sed -n '7p' "$file")
                 line8=$(sed -n '8p' "$file")
  PK="\033[38;5;199m"
  BL="\033[38;5;20m"
  BOL="\033[1m"
  GR="\033[38;5;2m"
  GL="\033[38;5;220m"
  RD="\033[38;5;160m"
  clear


if [ $line8 == "1" ]; then
  printf "${FB}${CW}${CB3}crash"
  clear
  RDCODE="0"
if [ $code == "1" ]; then
RDCODE="GENERIC BUILT IN SCRIPT FALIURE
"
elif [ $code == "2" ]; then
RDCODE="MISUSED BUILT IN
"
elif [ $code == "130" ]; then
RDCODE="CTRL C PRESSED
"
else
RDCODE="UNSPECIFIED ERROR ($code)"
fi
 printf "${FB}${CW}${CB3}Oh no!

Your system has crashed, it is recommended that you reinstall LUMINOUS OS or if you are using a custom bootloader to use the default!
We'll restart for you in 3                                                                             
STOP CODE: $RDCODE
LAST COMMAND USED: $cmd $arg
"
sleep 1
clear
 printf "${FB}${CW}${CB3}Oh no!

Your system has crashed, it is recommended that you reinstall LUMINOUS OS or if you are using a custom bootloader to use the default!
We'll restart for you in 2                                                                             
STOP CODE: $RDCODE
LAST COMMAND USED: $cmd $arg
"
sleep 1
clear
 printf "${FB}${CW}${CB3}Oh no!

Your system has crashed, it is recommended that you reinstall LUMINOUS OS or if you are using a custom bootloader to use the default!
We'll restart for you in 1                                                                             
STOP CODE: $RDCODE
LAST COMMAND USED: $cmd $arg
"
sleep 1
 clear
 sc="$(basename "${BASH_SOURCE[0]}")"
  sd="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd)"
  sp="$sd/$sc"
echo "3MB FILLER TEXT" > $CF
powershell -command "$sp"
exit 0
CRASHEDRESTARTABLE=1
RESTARTONCRASH
CRASHEDRESTARTABLE=1
  RESTARTONCRASH
  Power=1
  EFUNC
  Power=2
  ONFUNC

else
  printf "${BOL}${RD}CRITICAL ERROR
${GR}The shell has encountered an error that could not be properly resolved.${NOCOLOR}
${BL}CRASH INFO:${NOCOLOR}

${RD}CONFIG FILE FLAGS:${NOCOLOR}
${GL}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${NOCOLOR}
" 
if [ $line == "1" ]; then
line="NO"
elif [ $line == "0" ]; then
line="YES"
else
line="INVALID OR MISSING"
fi
printf "${BOL}${PK}NEW: $line
"
if [ $line3 == "1" ]; then
line3="YES"
elif [ $line3 == "0" ]; then
line3="NO"
else
line3="INVALID OR MISSING"
fi
printf "${BOL}${PK}MCMDB: $line3
"
if [ $line4 == "1" ]; then
line4="YES"
elif [ $line4 == "0" ]; then
line4="NO"
else
line4="INVALID OR MISSING"
fi
printf "${BOL}${PK}MULTIUSER: $line4
"
if [ -z "$line2" ]; then
line2="INVALID OR MISSING"
fi
printf "${BOL}${PK}USER 1: $line2
"
if [ -z "$line5" ]; then
line5="INVALID OR MISSING"
elif [ $line5 == "0" ]; then
line5="USER NOT IN USE"
fi
printf "${BOL}${PK}USER 2: $line5
"
if [ -z "$line6" ]; then
line6="INVALID OR MISSING"
elif [ $line6 == "0" ]; then
line6="USER NOT IN USE"
fi
printf "${BOL}${PK}USER 3: $line6
"
if [ $line7 == "1" ]; then
line7="YES"
ln7=1
elif [ $line7 == "0" ]; then
line7="NO"
ln7=0
else
line7="INVALID OR MISSING (WILL BE TREATED AS YES.)"
fi
printf "${BOL}${PK}EXTRA CRASH CONTENT: $line7
"
RDCODE="0"
if [ $code == "1" ]; then
RDCODE="GENERIC BUILT IN SCRIPT FALIURE
"
elif [ $code == "2" ]; then
RDCODE="MISUSED BUILT IN
"
elif [ $code == "130" ]; then
RDCODE="CTRL C PRESSED
"
else
RDCODE="UNSPECIFIED ERROR ($code)
"
fi
printf "${GL}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${NOCOLOR}
"
printf "${RD}SYSTEM INFORMATION:${NOCOLOR}
"
printf "${GL}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${NOCOLOR}
"
if [ $valf == "0" ]; then
valf="YES"
else
valf="NO"
fi
BTL=0
if declare -f e > /dev/null; then
BTL="YES"
else
BTL="NO"
fi
SYS=0
if declare -f ON > /dev/null; then
SYS="YES"
else
SYS="NO"
fi
if [ $val_opt == "2" ]; then
val_opt="YES"
else
val_opt="NO"
fi
printf "${BOL}${PK}VERSION: $ver
PASSED VALIDATION: $valf
IGNORED VALIDATION: $val_opt
NATIVE BOOTLOADER INTACT: $BTL
CRITICAL FUNCTION: $SYS${NOCOLOR}
${GL}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${NOCOLOR}
" 
if [ "$ln7" = "0" ]; then
  printf "${RD}ERROR CODE:${NOCOLOR} ${BL}$RDCODE${NOCOLOR}${GR}Upon restarting, the system may be unstable, and the window may close.${NOCOLOR}
"
  read -p "Press Enter to continue" 2>/dev/tty
  clear
  e
else
  printf "${RD}EXTRA INFORMATION:${NOCOLOR}
${GL}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${NOCOLOR}
"
if [ $nb == 1 ]; then
nb="YES"
else
nb="NO"
fi
  sc="$(basename "${BASH_SOURCE[0]}")"
  sd="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd)"
  sp="$sd/$sc"

  printf "${BOL}${PK}OS FILE NAME (IF NOT e.sh MAY CAUSE PROBLEMS.): $sc
${BOL}${PK}OS DIRECTORY: $sd
${BOL}${PK}OS FULL PATH: $sp${NOCOLOR}
${BOL}${PK}LAST COMMAND USED: $cmd $arg
${BOL}${PK}NATIVE BOOTLOADER USED: $nb
${GL}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -${NOCOLOR}
"
  if [ "$ln7" = "0" ]; then
    printf "${RD}ERROR CODE:${NOCOLOR} ${BL}$RDCODE${NOCOLOR}${GR}Upon restarting, the system may be unstable, and the window may close.${NOCOLOR}
"
  else
    printf "${RD}ERROR CODE:${NOCOLOR} ${BL}$RDCODE ($code) 
${NOCOLOR}${GR}Upon restarting, the system may be unstable, and the window may close.${NOCOLOR}
"
  fi
fi

read -p "Press Enter to continue..." 2>/dev/tty
sc="$(basename "${BASH_SOURCE[0]}")"
  sd="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd)"
  sp="$sd/$sc"
echo "3MB FILLER TEXT" > $CF
powershell -command "$sp"
exit 0
CRASHEDRESTARTABLE=1
RESTARTONCRASH
CRASHEDRESTARTABLE=1
  RESTARTONCRASH
  Power=1
  EFUNC
  Power=2
  ONFUNC
  fi
}

crash() {
printf "\033[10;40H\e[1mLUMINOUS OS\e[0m

LUMINOUS OS has encountered an error, and has shut down to pervent further errors.
This normally isn't an issue and you can reboot, if this is the first time.
If this isn't your first time having this screen you can try the following:
- Reinstalling via the same source you have installed it from
- Finding the cause of the error by its error code
- Contacting 'why_do_yall_hate_this_user' on Discord for support

"
if [ $cmd == "sed" ]; then
echo "ERROR CODE: REQUEST TOO BIG"
elif [ $cmd == "crashtest" ]; then
echo "ERROR CODE: CRASH TEST"
else
echo "Unknown error, reinstalling LUMINOUS OS is likely your best option."
fi
echo "<ERROR> The file read request was too big. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<ERROR> The file read request was too big. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Error-Log.log
read -p "Press Enter to restart" 2>/dev/tty
printf "\033[H"
  clear
    printf "${RED}Restarting...${NOCOLOR}"
   clear
       ((crashed++))
    if [ "$crashed" -ge 5 ]; then
        recovery
    fi
   echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
e
ON
}

val_opt=0

VALIDATION_FAILED() {
  rm -f downloaded.tmp
  clear
  echo "Your system differs from the current standard version.
This is likely due to using an outdated version of LUMINOUS OS.
NOTE: This feature is still buggy, it is not perfect.
Please choose a boot option:
1) Update the system
2) Continue launching
3) Terminate this instance"

  read -n1 -s val_opt
  echo

  case "$val_opt" in
    1)
      curl -O https://raw.githubusercontent.com/SilentTheOG/SILENTOS-SERVER/main/SERVER.TMP
      mv SERVER.TMP e.sh
      chmod +x e.sh
      ./e.sh
      exit 0
      ;;
    2)
      echo "ignore"
      ;;
    3)
      exit 0
      ;;
    4)
    devm=1
    exec 2>/dev/tty
    clear
    read -p "[SECRET] Developer mode enabled.
Press Enter to continue..." 2>/dev/tty
clear
      ;;
    *)
      VALIDATION_FAILED
      ;;
  esac
}

VALIDATION_FUNCTION() {
  echo "Validating system..."                              
  curl -s -H "Cache-Control: no-cache" https://raw.githubusercontent.com/SilentTheOG/SILENTOS-SERVER/main/SERVER.TMP > downloaded.tmp

  if cmp -s downloaded.tmp e.sh; then
    echo "System check complete, continuing..."
  else
    VALIDATION_FAILED
  fi

  rm -f downloaded.tmp
}


if [ -e $CF ]; then
  rm "$CF"
  Power=2
  bypassval=1
fi
if [ "$bypassval" != 1 ]; then
VALIDATION_FUNCTION
fi


recovery() {
    clear
    printf "\e[44m"  
    clear
    printf "\e[97m\e[1mRecovery\n"  
    printf "\e[0m"
    printf "\e[44mLUMINOUS OS has crashed five (or more) times in this session.
Here are some recovery options:

1) Reboot and try again
2) Disable MCMDB Mode (If it's on) and restart
3) Reinstall LUMINOUS OS\n"
    printf "\e[0m"
    read -n1 -s rec

    if [[ "$rec" != "1" && "$rec" != "2" && "$rec" != "3" ]]; then
        recovery
    elif [ $rec == "1" ]; then
    clear
printf "${RED}Restarting...${NOCOLOR}"
   clear
   echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
e
ON

elif [ $rec == "2" ]; then
echo "[REMOVED.]"

elif [ $rec == "3" ]; then
curl -O https://raw.githubusercontent.com/SilentTheOG/SILENTOS-SERVER/main/SERVER.TMP
touch FAILSAFE.SH
cat SERVER.TMP > e.sh | rm SERVER.TMP
echo "touch tmp.sh
echo "./e.sh" >> tmp.sh
./tmp.sh
rm tmp.sh
if [ -e "e.sh" ] && [ ! "$(wc -c < "e.sh")" -gt 3 ]; then
./RECOVERY_SCRIPT.SH
else
./e.sh
fi" > FAILSAFE.SH
./FAILSAFE.SH
fi
}

BLUE='\033[0;34m'


esh1="e.sh"
rm LOG.TXT
if [ -e "$esh1" ]; then
    esh=$(<"$esh1")
    fi

MCMDBON=0
 RED='\033[0;31m'
 BGB='\e[104m'
ft=1
Power=1
quote=\"start\"
quote2=\"list\"
EFUNC
ONFUNC
RESTARTONCRASH() {
  while [ $CRASHEDRESTARTABLE == 1 ]; do
  trap 'code=$?; if [ $code -ne 0 ]; then crashSYS; fi' EXIT
  done
}
